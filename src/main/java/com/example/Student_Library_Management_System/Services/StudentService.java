package com.example.Student_Library_Management_System.Services;

import com.example.Student_Library_Management_System.Enums.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

@Service
public class StudentService
{

    @Autowired
    StudentRepository studentRepository;


    public String createStudent(@RequestBody Student student)
    {

        //Student from the postman is already the basic attributes set.

        //Card Should be autogenerated when createStudent function is called.
        // Hence we will create a object of Card
        Card card=new Card();
        card.setCardStatus(CardStatus.ACTIVATED);   // Setting card status as activated through Enum
        card.setStudent(student);     // Using this attribute the foreign key will be set   --> from here only foreign key value will come
        //here student is Foreign key attribute
        //Filling the value of the unidirectional part.

        //Lets go to the student---> this card is belonging to this current student
        student.setCard(card);

        // Now both student and card entities are ready

        //If there was a unidirectional mapping : we had to save both of them
        //studentRepo.save () and cardRepo.save()
        //But we are super advance and are using bidirectional : Child will automatically be saved.
        // Hence I am only saving the StudentRepository
        studentRepository.save(student);      // JPA functionalities getting through Auto-wiring

        //By cascading effect, child will automatically be saved (cardRepo will be saved)

        return "Student and Card added";
    }
}
